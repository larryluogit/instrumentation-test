plugins {
  id "java"
}

apply from: "$rootDir/gradle/checkstyle.gradle"

dependencies {
  compileOnly(project(":bootstrap"))
  compileOnly("io.opentelemetry:opentelemetry-sdk")
  compileOnly("io.opentelemetry:opentelemetry-semconv")
  compileOnly("io.opentelemetry:opentelemetry-sdk-extension-autoconfigure-spi")
  compileOnly("io.opentelemetry.javaagent:opentelemetry-javaagent-extension-api")
  compileOnly("io.opentelemetry.javaagent:opentelemetry-javaagent-tooling")
}

def updateGeneratedFile(file, newContent) {
  if (System.getenv("CHECK_GENERATED_FILES") == "true") {
    def oldContent = file.text
    if (oldContent != newContent) {
      throw new GradleException("File ${file} was modified in CI. Please update it locally and commit.")
    }
  } else {
    project.mkdir(file.parent)
    file.text = newContent
  }
}

task manageVersionClass() {
  doLast {
    updateGeneratedFile(new File("${projectDir}/src/main/java/com/example/javaagent", "DistributionVersion.java"),
      """/*
 * Copyright The OpenTelemetry Authors
 * SPDX-License-Identifier: Apache-2.0
 */

package com.example.javaagent;

// This class is generated by build.gradle.  Do not edit.

public class DistributionVersion {

  public static final String VERSION = "$version";
}
""")
  }
}

compileJava.dependsOn(manageVersionClass)

