// Set properties before any plugins get loaded
ext {
  minJavaVersionForTests = JavaVersion.VERSION_1_8
}

apply from: "$rootDir/gradle/instrumentation.gradle"
apply plugin: 'org.unbroken-dome.test-sets'

muzzle {
  pass {
    group = "io.netty"
    module = "netty-codec-http"
    versions = "[4.1.0.Final,)"
    assertInverse = true
  }
  pass {
    group = "io.netty"
    module = "netty-all"
    versions = "[4.1.0.Final,)"
    assertInverse = true
  }
  fail {
    group = "io.netty"
    module = "netty"
    versions = "[,]"
  }
  pass {
    group = "io.vertx"
    module = "vertx-core"
    versions = "[3.3.0,)"
    assertInverse = true
  }
}

testSets {
  reactorTest {
    filter {
      // this is needed because "test.dependsOn jms2Test", and so without this,
      // running a single test in the default test set will fail
      setFailOnNoMatchingTests(false)
    }
  }
}

test.dependsOn reactorTest

dependencies {
  library group: 'io.netty', name: 'netty-codec-http', version: '4.1.0.Final'

  testLibrary group: 'org.asynchttpclient', name: 'async-http-client', version: '2.1.0'

  latestDepTestLibrary group: 'io.netty', name: 'netty-codec-http', version: '(,5.0)'
  // latest async-http-client incompatable with 5.0+ netty

  reactorTestImplementation project(':instrumentation:reactor-3.1')
  reactorTestImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-reactor-netty', version: '2.2.0.RELEASE'
}

// We need to force the dependency to the earliest supported version because other libraries declare newer versions.
configurations.testImplementation {
  resolutionStrategy {
    eachDependency { DependencyResolveDetails details ->
      //specifying a fixed version for all libraries with io.netty' group
      if (details.requested.group == 'io.netty') {
        details.useVersion "4.1.0.Final"
      }
    }
  }
}
