---
# For Tomcat, the default JMX domain is "Catalina:", however with some deployments like embedded in spring-boot
# we can have the "Tomcat:" domain used, thus we have to duplicate metrics definitions as using a wildcard
# would match too broadly

rules:
  - bean: Catalina:type=GlobalRequestProcessor,name=*
    unit: "1"
    prefix: tomcat.
    metricAttribute:
      name: param(name)
    mapping:
      errorCount:
        metric: request.errorCount
        type: gauge
        unit: "{request}"
        desc: The number of errors per second on all request processors
      requestCount:
        metric: request.requestCount
        type: gauge
        unit: "{request}"
        desc: The number of requests per second across all request processors
      maxTime:
        metric: request.maxTime
        type: gauge
        unit: ms
        desc: The longest request processing time
      processingTime:
        metric: request.processingTime
        type: counter
        unit: ms
        desc: Total time for processing all requests
      bytesReceived:
        metric: network.io
        type: counter
        unit: By
        desc: The number of bytes transmitted
        metricAttribute:
          network.io.direction: const(receive)
      bytesSent:
        metric: network.io
        type: counter
        unit: By
        desc: The number of bytes transmitted
        metricAttribute:
          network.io.direction: const(transmit)
  - bean: Tomcat:type=GlobalRequestProcessor,name=*
    unit: "1"
    prefix: tomcat.
    metricAttribute:
      name: param(name)
    mapping:
      errorCount:
        metric: request.errorCount
        type: gauge
        unit: "{request}"
        desc: The number of errors per second on all request processors
      requestCount:
        metric: request.requestCount
        type: gauge
        unit: "{request}"
        desc: The number of requests per second across all request processors
      maxTime:
        metric: request.maxTime
        type: gauge
        unit: ms
        desc: The longest request processing time
      processingTime:
        metric: request.processingTime
        type: counter
        unit: ms
        desc: Total time for processing all requests
      bytesReceived:
        metric: network.io
        type: counter
        unit: By
        desc: The number of bytes transmitted
        metricAttribute:
          network.io.direction: const(receive)
      bytesSent:
        metric: network.io
        type: counter
        unit: By
        desc: The number of bytes transmitted
        metricAttribute:
          network.io.direction: const(transmit)

  - bean: Catalina:type=Manager,host=localhost,context=*
    unit: "{session}"
    prefix: tomcat.session.
    type: updowncounter
    metricAttribute:
      context: param(context)
    mapping:
      activeSessions:
        metric: activeSessions
        desc: The number of active sessions
  - bean: Tomcat:type=Manager,host=localhost,context=*
    unit: "{session}"
    prefix: tomcat.session.
    type: updowncounter
    metricAttribute:
      context: param(context)
    mapping:
      activeSessions:
        metric: activeSessions
        desc: The number of active sessions

  - bean: Catalina:type=ThreadPool,name=*
    unit: "{thread}"
    prefix: tomcat.thread.
    type: updowncounter
    metricAttribute:
      name: param(name)
    mapping:
      currentThreadCount:
        metric: currentThreadCount
        desc: Total thread count of the thread pool
      currentThreadsBusy:
        metric: currentThreadsBusy
        desc: Busy thread count of the thread pool
  - bean: Tomcat:type=ThreadPool,name=*
    unit: "{thread}"
    prefix: tomcat.thread.
    type: updowncounter
    metricAttribute:
      name: param(name)
    mapping:
      currentThreadCount:
        metric: currentThreadCount
        desc: Total thread count of the thread pool
      currentThreadsBusy:
        metric: currentThreadsBusy
        desc: Busy thread count of the thread pool
