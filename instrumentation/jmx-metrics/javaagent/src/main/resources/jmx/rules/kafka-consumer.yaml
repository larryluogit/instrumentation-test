---
rules:
  # Client Consumer metrics

  - bean: kafka.consumer:client-id=*,type=consumer-coordinator-metrics
    metricAttribute:
      "client-id": param(client-id)
      type: beanattr(Type)
    prefix: "jmx-kafka-consumer-"
    mapping:
      "assigned-partitions":
      "commit-latency-avg":
      "commit-latency-max":
      "commit-rate":
      "commit-total":
      "failed-rebalance-rate-per-hour":
      "failed-rebalance-total":
      "heartbeat-rate":
      "heartbeat-response-time-max":
      "heartbeat-total":
      "join-rate":
      "join-time-avg":
      "join-time-max":
      "join-total":
      "last-heartbeat-seconds-ago":
      "last-rebalance-seconds-ago":
      "partition-assigned-latency-avg":
      "partition-assigned-latency-max":
      "partition-lost-latency-avg":
      "partition-lost-latency-max":
      "partition-revoked-latency-avg":
      "partition-revoked-latency-max":
      "rebalance-latency-avg":
      "rebalance-latency-max":
      "rebalance-latency-total":
      "rebalance-rate-per-hour":
      "rebalance-total":
      "sync-rate":
      "sync-time-avg":
      "sync-time-max":
      "sync-total":

  - bean: kafka.consumer:client-id=*,topic=*,type=consumer-fetch-manager-metrics
    metricAttribute:
      "client-id": param(client-id)
      "topic": param(topic)
      type: beanattr(Type)
    prefix: "jmx-kafka-consumer-"
    mapping:
      "bytes-consumed-rate":
      "bytes-consumed-total":
      "fetch-size-avg":
      "fetch-size-max":
      "records-consumed-rate":
      "records-consumed-total":
      "records-per-request-avg":

  - bean: kafka.consumer:client-id=*,type=consumer-fetch-manager-metrics
    metricAttribute:
      "client-id": param(client-id)
      type: beanattr(Type)
    prefix: "jmx-kafka-consumer-"
    mapping:
      "fetch-latency-avg":
      "fetch-latency-max":
      "fetch-rate":
      "fetch-throttle-time-avg":
      "fetch-throttle-time-max":
      "fetch-total":

  - bean: kafka.consumer:client-id=*,topic=*,partition=*,type=consumer-fetch-manager-metrics
    metricAttribute:
      "client-id": param(client-id)
      "topic": param(topic)
      "partition": param(partition)
      type: beanattr(Type)
    prefix: "jmx-kafka-consumer-"
    mapping:
      "records-lag":
      "records-lag-avg":
      "records-lag-max":
      "records-lead":
      "records-lead-avg":
      "records-lead-min":

  - bean: kafka.consumer:client-id=*,type=consumer-metrics
    metricAttribute:
      "client-id": param(client-id)
      type: beanattr(Type)
    prefix: "jmx-kafka-consumer-"
    mapping:
      "connection-close-rate":
      "connection-close-total":
      "connection-count":
      "connection-creation-rate":
      "connection-creation-total":
      "failed-authentication-rate":
      "failed-authentication-total":
      "failed-reauthentication-rate":
      "failed-reauthentication-total":
      "io-ratio":
      "io-time-ns-avg":
      "io-wait-ratio":
      "io-wait-time-ns-avg":
      "io-waittime-total":
      "iotime-total":
      "last-poll-seconds-ago":
      "network-io-rate":
      "network-io-total":
      "poll-idle-ratio-avg":
      "reauthentication-latency-avg":
      "reauthentication-latency-max":
      "select-rate":
      "select-total":
      "successful-authentication-no-reauth-total":
      "successful-authentication-rate":
      "successful-authentication-total":
      "successful-reauthentication-rate":
      "successful-reauthentication-total":
      "time-between-poll-avg":
      "time-between-poll-max":

  - bean: kafka.consumer:client-id=*,node-id=*,type=consumer-node-metrics
    metricAttribute:
      "client-id": param(client-id)
      "node-id": param(node-id)
      type: beanattr(Type)
    prefix: "jmx-kafka-consumer-"
    mapping:
      "incoming-byte-rate":
      "incoming-byte-total":
      "outgoing-byte-rate":
      "outgoing-byte-total":
      "request-latency-avg":
      "request-latency-max":
      "request-rate":
      "request-size-avg":
      "request-size-max":
      "request-total":
      "response-rate":
      "response-total":
