apply from: "${rootDir}/gradle/java.gradle"

minimumBranchCoverage = 0.6
minimumInstructionCoverage = 0.8
excludedClassesCoverage += [
  'io.opentelemetry.auto.tooling.*',
  'io.opentelemetry.auto.decorator.*' // temporarily until all the deprecated methods which are no longer being tested are removed
]

configurations {
  // classpath used by the instrumentation muzzle plugin
  instrumentationMuzzle
}

dependencies {
  compile(project(':auto-bootstrap')) {
    // This only needs to exist in the bootstrap, not the instrumentation jar.
    exclude group: 'org.slf4j', module: 'slf4j-simple'
  }
  compile(project(':utils:thread-utils'))

  compile deps.opentelemetryApi
  compile deps.opentelemetrySdk
  compileOnly deps.opentelemetryJaeger

  // TODO: This might have to live in opentelemetry-java
  compile project(':exporter-support')

  // Needed for Jaeger exporter
  compileOnly group: 'io.grpc', name: 'grpc-api', version: '1.24.0'

  compile group: 'com.blogspot.mydailyjava', name: 'weak-lock-free', version: '0.15'
  compile deps.bytebuddy
  compile deps.bytebuddyagent
  annotationProcessor deps.autoservice
  implementation deps.autoservice

  testCompile project(':testing')
  testCompile project(':exporter-adapters:dummy-exporter-adapter')

  instrumentationMuzzle sourceSets.main.output
  instrumentationMuzzle configurations.compile
}


def dummyExporterJar = project(":")

test {
  systemProperty 'projectVersion', allprojects.version[0]
}
