name: Nightly build without cache

on:
  schedule:
    # strange schedule to reduce the risk of DDOS GitHub infra
    - cron: "48 4 * * *"
  workflow_dispatch:

jobs:
  build:
    uses: ./.github/workflows/build.yml
    with:
      no-build-cache: true

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-java-version:
          - 8
          - 11
          - 15
        vm:
          - hotspot
          - openj9
      fail-fast: false
    steps:
      - uses: actions/checkout@v3

      - id: setup-test-java
        name: Set up JDK ${{ matrix.test-java-version }}-${{ matrix.vm }} for running tests
        uses: actions/setup-java@v2
        with:
          distribution: adopt-${{ matrix.vm }}
          java-version: ${{ matrix.test-java-version }}

      - name: Set up JDK 11 for running Gradle
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11

      - name: Test
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test -PtestJavaVersion=${{ matrix.test-java-version }} -PtestJavaVM=${{ matrix.vm }} -Porg.gradle.java.installations.paths=${{ steps.setup-test-java.outputs.path }} -Porg.gradle.java.installations.auto-download=false --no-build-cache

  testLatestDeps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11 for running Gradle
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11

      - name: Test
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test -PtestLatestDeps=true --no-build-cache

  smoke-test:
    uses: ./.github/workflows/smoke-test.yml
    with:
      no-build-cache: true
    secrets:
      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}

  # muzzle is intentionally not included in the nightly-no-cache build because
  # it doesn't use gradle cache anyways and so is already covered by the normal nightly build

  examples:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11 for running Gradle
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11

      - name: Set up gradle cache
        uses: gradle/gradle-build-action@v2

      - name: Local publish of artifacts
        # javadoc task fails sporadically fetching https://docs.oracle.com/javase/8/docs/api/
        run: ./gradlew publishToMavenLocal -x javadoc

      - name: Local publish of gradle plugins
        # javadoc task fails sporadically fetching https://docs.oracle.com/javase/8/docs/api/
        run: ./gradlew publishToMavenLocal -x javadoc
        working-directory: gradle-plugins

      - name: Build distro
        run: ./gradlew build --init-script ../../.github/scripts/local.init.gradle.kts --no-build-cache
        working-directory: examples/distro

      - name: Build extension
        run: ./gradlew build --init-script ../../.github/scripts/local.init.gradle.kts --no-build-cache
        working-directory: examples/extension

      - name: Run muzzle check against extension
        run: ./gradlew muzzle --init-script ../../.github/scripts/local.init.gradle.kts
        working-directory: examples/extension

  # markdown-link-check is intentionally not included in the nightly-no-cache build because
  # it doesn't use gradle cache anyways and so is already covered by the normal nightly build

  issue:
    name: Open issue on failure
    needs: [ build, test, testLatestDeps, smoke-test, examples ]
    runs-on: ubuntu-latest
    if: always()
    steps:
      # run this action to get workflow conclusion
      # You can get conclusion by env (env.WORKFLOW_CONCLUSION)
      - uses: technote-space/workflow-conclusion-action@v2.2

      - uses: actions/checkout@v3

      - uses: JasonEtco/create-an-issue@v2.6
        if: env.WORKFLOW_CONCLUSION == 'failure' # notify only if failure
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/templates/workflow-failed.md
